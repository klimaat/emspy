#  GRIB information file for ems_prep.pl - Robert Rozumalski NWS - January 2012
#
#  This file contains information on data sets used with the ems_prep.pl routine for
#  initialization of the EMS. Should you decide to mangle its contents or use
#  this file as a template, then please note that the following parameters are necessary
#  for your happiness and well-being.

#1/2. CATEGORY is used to categorize this data set for the purpose of better organizing
#     the available initialization data options when passing the --dslist flag to ems_prep.
#     The category may be anything you choose but it's recommended that you stick to a few
#     established conventions unless you have a good reason to create your own. The current
#     category list includes:
#
#         Category                    Description
#         ---------------------------------------------------------------------------------
#         Land Surface Model (LSM)  - Data sets containing LSM-related fields (--lsm)
#         Surface            (SFC)  - Data sets containing static surface fields (--sfc)
#         Forecast           (FCST) - Operational Forecast data sets
#         Analysis           (ANAL) - Operational Analysis data sets (--analysis)
#         Model Forecast     (MODL) - Data sets from Non-operational model runs
#         Historical         (REAN) - Historical or Reanalysis data sets
#
#     The following may be appended to the category to indicate a personal tile data set
#
#         Personal Tiles     (PTIL) - STRC Personal tile data sets
#
#     If you want something different just make up a category name and it will be handled
#     appropriately by ems_prep.
#
#     Leaving CATEGORY blank or undefined will result in the data set being placed in
#     the "Land of misfit data sets" category.
#
CATEGORY = Historical

#  1. INFO provides some general information about the data set such as forecast frequency, 
#     vertical and horizontal resolution and coordinate system.
#
#     Example: INFO = .5 degree Global - Isobaric coordinate - 3hourly grib format
#
INFO = North America Regional Reanalysis (NARR) 32km resolution 221 grid - Isobaric coordinate (~56mb)

#     More NARR information is available from http://www.emc.ncep.noaa.gov/mmb/rreanl
#

#  2. VCOORD identifies the vertical coordinate of the data set. Typical values are
#
#       VCOORD = press  : Isobaric Coordinate
#       VCOORD = hybrid : Hybrid Coordinate (such as RUC)
#       VCOORD = theta  : Isentropic Coordinate
#       VCOORD = height : Height Coordinate
#       VCOORD = sigma  : Sigma Coordinate (Native ARW or NMM)
#       VCOORD = none   : No vertical coordinate (Surface-based) data
#
VCOORD = press


#  3. INITFH is the initial (forecast) hour of the data set you wish to download.  It is the
#     default value but may be overridden from the command line or the CYCLES setting below.
#
#      Examples:
#
#        INITFH    =  00 
#
#      To download the 00 hour forecast from the data set as your 00 hour forecast.
#
#        INITFH    =  06
#
#      To download the 06 hour forecast from the data set as your 00 hour forecast.
#  
INITFH = 00

#  4. FINLFH is the final (forecast) hour of the GRIB file(s) you wish to download. Again,
#     this is the default value and may be overridden on the command line or with the
#     CYCLES parameter. 
# 
#       Example: FINLFH = 48
# 
#     To use the 48 hour forecast from the data set as your last time for your boundary
#     conditions.
# 
#     Note that FINLFH - INITFH defines the length of your run unless otherwise overridden.
#     See the CYCLES option below or the [--length ] ems_prep option for more details.
#
FINLFH = 24

#  5. FREQFH is the frequency, in hours, of the (forecast) files you wish to download
#     between INITFH and FINLFH. This server as your boundary condition frequency and it is
#     suggested that you use the highest frequency available (lowest value), which is
#     usually 3-hourly (FREQFH = 03). Do not set this value lower than the frequency of the
#     available data because bad stuff will happen.
#
#     Example: FREQFH = 03
#
FREQFH = 03


#  6. CYCLES defines the cycle hours (UTC) for which forecast files are generated from the
#     model runs. The standard format for this parameter is:
# 
#       CYCLES = CYCLE 1, CYCLE 2, ..., CYCLE N, 
# 
#     where each cycle time (UTC) is separated by a comma (,). For example:
# 
#       Example: CYCLES = 00,06,12,18
# 
#     IMPORTANT: The times listed in CYCLE are critical to ems_prep.pl working correctly as
#     they identify the most recent data set available when executing real-time simulations.
#     For example, if you want to download a 12 UTC run but "12" is not listed in the CYCLES
#     setting, you will be out of luck (SOL). The ems_prep.pl routine will default to the 
#     most recent cycle time.
# 
#     Alternatively, if you include cycle time for which no data set exists then you  will
#     have problems with your real-time downloads. Just don't do it.
#               
#     There is a caveat though, please see the DELAY parameter below for more information.
#
#     Note that the CYCLES setting can be overridden with the --cycles command line option. 
#     See "ems_prep --guide" for the gory details. 
# 
# 
#     ADVANCED COMPLEX STUFF: 
# 
#     The CYCLES parameter may be used to override the default INITFH, FINLFH, and FREQFH 
#     values. If you do not want to use default settings for every model cycle, try using:
# 
#        CYCLES = CYCLE[:INITFH:FINLFH:FREQFH].  
# 
#     Example: CYCLES = 00:24:36:06,06,12,18:12:36
#  
#     Note that in the above example the individual cycle times are separated by a comma (,)
#     and the INITFH, FINLFH, and FREQFH values are separated by a colon (:).
# 
#     INTERPRETATION:
# 
#       From the 00Z Cycle run (00:24:36:06), obtain the 24 to 36 hour forecasts 
#       every 06 hours. Note these values override the INITFH, FINLFH, and FREQFH 
#       default values!
#  
#       From the 06Z Cycle run (06) use the default values of INITFH, FINLFH, and 
#       FREQFH specified above.
#  
#       From the 12Z Cycle run (12) use the default values of INITFH, FINLFH, and 
#       FREQFH specified above.
#  
#       From the 18Z Cycle run (18:12:36), the 12 to 36 hour forecasts every 
#       FREQFH hours.
# 
#       There are even a few other options when using the --cycle option in ems_prep. 
#       See the guide for more information.
# 
CYCLES = 00,03,06,09,12,15,18,21


#  7. MAXUDFREQ is the defined the maximum BC update frequency available for this data set.
#     The value of MAXUDFREQ should be determined by the frequency of forecast files out-
#     put from an operational model or the amount of time between analyses for analysis
#     data sets. MAXUDFREQ may be the same as the time between the values in CYCLES for
#     analysis data sets but is probably less for operational data.A
#
#     The primary purpose of MAXUDFREQ is to make sure the user, which be you, does not
#     request a value of BCFREQ that is greater than that available, in which case
#     the ems_prep routine will fail because it could not locate all the initialization
#     data.
#
#     The MAXUDFREQ field is not needed for surface and land surface model data sets.
#
#     It should not be necessary to change MAXUDFREQ from the default value unless you
#     know something I don't, which is very possible.
#
MAXUDFREQ = 3


#  8. DELAY represents the number of hours, following a cycle time, before the GRIB files
#     are available. In most cases, a lag exists from the time that  the operational model
#     is initialized to when the run is completed and the data are  post processed. For
#     example, if DELAY = 3, then ems_prep.pl will not look for the 12Z cycle run files
#     until after 15Z (12+3). The 06Z cycle would be used as the current cycle (default)
#     between 9 and 15Z. This behavior can be overridden with the  --nodelay option in 
#     ems_prep.pl.
# 
#     Note that if you set the value too low then you will be hitting the server for 
#     data when the files are not available, which is not good.
# 
#     Example: DELAY = 05
# 
DELAY = 00

#  9. SERVER-METHOD specifies the method used to download the data files, the location of 
#     the files along with the filenames files joined by a colon (:).
# 
#     SERVER-METHOD = SERVER ID:/directory location of data on server/filename convention
# 
#     IMPORTANT: The SERVER ID must have a corresponding IP/hostname defined in the SERVER
#     section of the ems/data/conf/ems_prep/prep_global.conf configuration file.
# 
#     Note that the following place holders will be replaced with the appropriate values 
#     in ems_prep.pl:
# 
#       YYYY  - 4 digit year
#       YY    - 2 digit year
#       MM    - 2 digit month
#       DD    - 2 digit day
#       CC    - Model cycle hour
#       FF    - 2-digit Forecast hour
#       FFF   - 3-digit Forecast hour
#       NN    - 2-digit Forecast minute
#       TT    - Tile number(s) for GRIB tiles.
#
#     Also, there are occasions when one or more of the reserved place holder character
#     strings is (are) part of the actual filename or path. An example of this issue
#     would be "nam.tCCz.awip3dFFF" where the filename for a 12 hour forecast from a 
#     00 UTC run is "nam.t00z.awip3dF12". Note that an "F" precedes the forecast hour,
#     which is replaced by the "FF" (or "FFF") place holders in the SERVER-<METHOD>
#     entry.  This might lead to problems as ems_prep would not know which "FF" to
#     replace and the "F" in the filename may be overridden.
#
#     To remedy this problem, a "\" may be placed BEFORE each character to be retained 
#     in the filename. In the above example, the file naming convention specified in the 
#     SERVER-<METHOD> would be "nam.tCCz.awip3d\FFF" and the leading "F" in "FFF" will be
#     preserved in the filename.
#
#     METHOD
#
#     The METHOD indicates the method to use to acquire the data. Currently ftp, http, or 
#     nfs are supported indicated by SERVER-FTP, SERVER-HTTP, and SERVER-NFS respectively.
#
#     Examples: SERVER-HTTP = STRC:/data/grib/YYYYMMDD/nam/grid212/grib.tCCz/nam.tCCz.awip3dFF.tm00.bz2
#               SERVER-FTP  = NCEP:/pub/data/nccf/com/gfs/prod/gfs.YYYYMMDD/gfs.tCCz.pgrb2\FFF.bz2
#               SERVER-NFS  = KIELBASA:/data/archive/YYYYMMDD/grib/212/grib.tCCz/nam.tCCz.awip3dFF.tm00
#
#     In the first example above, STRC is the ID of the http server and has a corresponding 
#     STRC = <hostname> entry in the prep_global.conf file. The files are located in the 
#     /data/grib/YYYYMMDD/nam/grid212/grib.tCCz directory on the server and 
#     /nam.tCCz.awip3dFF.tm00.bz2 is the naming convention, with space holders.
#
#     Note that ems_prep.pl will automatically unpack ".gz" and ".bz2" files. If you are 
#     using a data source that is packed then make sure you include the appropriate suffix.
#
#     In the second example above, NCEP is the ID of the ftp server and has a corresponding
#     NCEP = <hostname> entry in prep_global.conf. In order to use the SERVER-FTP (HTTP) option
#     the data files must be available via ftp (http).
#
#     * NFS USERS *
#
#     In the SERVER-NFS example above, KIELBASA is the server ID of the system where the 
#     data reside and there is a corresponding KIELBASA = <hostname> entry in the 
#     prep_global.conf file. Unlike the FTP and HTTP options, either SERVER ID or actual
#     hostname ([user@]<hostname>:) may be used to identify the server. 
#
#     If a SERVER ID is used, it must be in ALL CAPS in both the "SERVER-NFS =" line and the 
#     prep_global.conf file. For example:
#
#       SERVER-NFS  = KIELBASA:/data/grib/YYYYMMDD/gfs/grib.tCCz/YYMMDDCC.gfs.tCCz.pgrb2fFF
#     
#     Where in prep_global.conf: KIELBASA = roz@kielbasa (Note the all capital letters 
#                                                         for kielbasa)
#     And
#
#       SERVER-NFS  = roz@kielbasa:/data/grib/YYYYMMDD/gfs/grib.tCCz/YYMMDDCC.gfs.tCCz.pgrb2fFF
#
#     Are basically the same thing. So why then allow for both options?  Specifying a server
#     ID in the "SERVER-NFS =" line will allow you to specify a server when passing the 
#     --dset <dset set>:nfs:<server> flag to ems_prep.pl. So if you had:
#
#       SERVER-NFS  = SERVER_A:/data/archive/YYYYMMDD/grib/212/grib.tCCz/nam.tCCz.awip3dFF.tm00.gz
#       SERVER-NFS  = SERVER_B:/data/archive/YYYYMMDD/grib/212/grib.tCCz/nam.tCCz.awip3dFF.tm00.gz
#
#     With SERVER_A and SERVER_B defined in prep_global.conf, then you can specify a server
#     to access:
#
#       % ems_prep  [other options]  --dset <data set>:nfs:server_b (either upper or lower case)
#
#     The default behavior with just "ems_prep  --dset <data set>:nfs" will result in ems_prep.pl 
#     looping through each of the servers listed (first SERVER_A and then SERVER_B).
#
#     IMPORTANT! - The ems_prep.pl routine uses secure copy (scp) to access the data on those
#                  servers identified by either the SERVER ID or actual hostname 
#                  ([user@]<hostname>), so you MUST have passwordless ssh configured between
#                  the machine running ems_prep.pl and the server.
#
#     But what is your data reside on the same machine as ems_prep.pl and you don't want to
#     use scp? In that case set the SERVER ID to "LOCAL" or leave blank:
#
#       SERVER-NFS  = LOCAL:/data/archive/YYYYMMDD/grib/212/grib.tCCz/nam.tCCz.awip3dFF.tm00.gz
#     or
#       SERVER-NFS  = /data/archive/YYYYMMDD/grib/212/grib.tCCz/nam.tCCz.awip3dFF.tm00.gz
#
#     in which case ems_prep.pl will use the standard copy command (cp) to access the 
#     requested file from a locally-mounted partition.
#     
#     Finally, if there is more than one server listed below and you do not specify a server
#     or method, i.e, "% ems_prep --dset <data set>", then ems_prep.pl will attempt to connect
#     each (ftp,http,nfs) server listed until all the requested files have been  downloaded.
#
#     So in summary:
#
#         % ems_prep --dset <data set>:<method>:<server> - Attempt to get <data set> via <method> 
#                                                          from <server>
#
#          % ems_prep --dset <data set>:<method>  - Attempt to get <data set> from all the <method>
#                                                   servers listed in the <data set>_gribinfo.conf file.
#
#          % ems_prep --dset <data set> - Attempt to get <data set> via all the methods and servers
#                                         listed in the <data set>_gribinfo.conf file.
#
#          

#SERVER-NFS = LOCAL:/home/jeeves/narr/YYYY/MM/narr-a_221_YYYYMMDD_HH00_000.grb2
SERVER-HTTP = STRC:/data/grib/narr/YYYY/MM/narr-a_221_YYYYMMDD_HH00_000.grb2


# 10. LOCFIL is file naming convention to be used on the LOCAL system.  This filename is
#     usually the same as that on the remote server; but hey, you have the power. The 
#     primary purpose for this parameter is so filenames on the local machine do not change 
#     when failing over to a different remote server, which may not use an identical naming 
#     convention for the same data set. The filename uses the same YYYY, MM, DD, CC, FF, 
#     and TT place holders listed in the SERVER-METHOD section.
#
#     GRIB 2 <-> 1 CONVERSION
#
#     The EMS will automatically convert between GRIB formats if requested by the user.
#     This is necessary when using some data sets such as the NCEP tiles, which are available
#     from NCEP in GRIB 2 format but must be converted to GRIB 1 format before processing
#     into WRF. The ems_prep routine keys off the differences between the filenames on the
#     remote and local systems. If the files on the remote server contain "grib2" or "grb2"
#     "gr2" in the filename but is missing on local filename, then the the file will be
#     converted to GRIB 1 format.  Conversely, if the remote file uses a GRIB 1 naming
#     convention but a GRIB 2 name is used locally, then a GRIB 1 -> 2 conversion will occur.
#
#     Example: LOCFIL = YYMMDDCC.gfs.tCCz.pgrb2fFF
#
LOCFIL = narr-a_221_YYYYMMDD_HH00_000.grb2

# 11. VTABLE is the Vtable.<MODEL ID> to use when processing the GRIB grids into the WPS
#     intermediate format. All tables are located $EMS/data/conf/tables/vtables directory and 
#     define what fields to pull from the GRIB file for processing and initialization in your
#     run. Note that Vtables are quasi-independent of the data set. The table just describes
#     the available fields and not the navigation information so a single Vtable table may 
#     be used for multiple data sets.
#
#     LVTABLE is the Vtable to use should this data set be accessed with the --lsm <data set> 
#     option, in which case the user likely wants a subset (near surface fields) of the fields
#     available in the Vtable specified by LVTABLE. So, LVTABLE should point to a file
#     that contains just the near surface fields. Both VTABLE and LVTABLE may be specified
#     below.
#
#     Examples: VTABLE  = Vtable.NAM
#               LVTABLE = Vtable.NAMLSM
#
VTABLE  = Vtable.NARR

# 12. METGRID is used to specify an alternate METGRID.TBL file when running the metgrid routine 
#     as part of ems_prep.pl. If METGRID is not specified, then the default tables will be used
#     for both the NMM and ARW cores. There are some data sets, such as the NARR, which require 
#     modifications to the default tables (one for the ARW and NMM core), and thus, a new 
#     METGRID.TBL file should be created based upon an existing table. 
#
#     The key word "CORE" in the METGRID filename below will be replaced by the appropriate core.
#     For example, when setting METGRID below to
#
#     METGRID = METGRID.TBL.NARR.CORE
#
#     the ems_prep.pl routine will set the name of the file to either METGRID.TBL.NARR.ARW or
#     METGRID.TBL.NARR.NMM depending on the WRF model being run.  Using the METGRID setting
#     assumes that you have created appropriately named files and placed them in the 
#     ems/data/conf/tables/wps directory with the other metgrid tables.
#
METGRID = METGRID.TBL.NARR.CORE
                               
# That's all there is for now.
#
